{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"unpack s2&note kernel and rebuild","body":"= Galaxy S2 Kernel Packing/Repacking Tools =\r\n\r\nTo unpack:\r\n        $ ./unpack.sh [original_zImage] [unpack_output_dir]\r\n\r\nModify files in unpack output dir as necessary.\r\n\r\nTo repack:\r\n\r\n   a) Generate ramfs output.cpio from unpack output dir:\r\n        $ ./gen_initramfs.sh -o [output.cpio] -u 0 -g 0 [unpack_output_dir]\r\n\r\n   b) Ensure your toolchain binaries are on your path\r\n\r\n   c) Set COMPILER_LIB environment variable to your toolchain gcc lib directory\r\n\r\n   d) Repack ramfs output.cpio and kernel from original zImage to new zImage\r\n        $ ./repack.sh [original_zImage] [output.cpio] [new_zImage]\r\n\r\n   e) Resize new zImage to size of original zImage\r\n        $ dd if=[new_zImage] of=[new_zImage_resized] bs=[original_zImage_size] conv=sync\r\n\r\n= Original Documentation =\r\n\r\nPlease edit repack.sh:\r\n\t# you should point where your cross-compiler is         \r\n\tCOMPILER=/home/xiaolu/bin/android-toolchain-eabi/bin/arm-eabi\r\n\tCOMPILER_LIB=/home/xiaolu/bin/android-toolchain-eabi/lib/gcc/arm-eabi/4.5.4\r\n\r\nUnpack zImage,Usage:\r\n\t./unpack.sh zImagesy267 sy267\r\n\r\nRepack zImage,Usage:\r\n\t./repack.sh zImagesy267 initramfs.cpio new_zImage\r\n\tor\r\n\t./repack.sh zImagesy267 sy267 new_zImage\r\n\r\nPadding sufile to new_zImage offset=7000000,Example:\r\n\t./repack.sh zImagesm189 sm189.cpio new_zImage su\r\n\r\n\tpost-int.sh(init.rc services):\r\n\tdd if=/dev/block/mmcblk0p5 of=/system/bin/su skip=7000000 seek=0 bs=1 count=26336\r\n\tdd if=/dev/block/mmcblk0p5 of=/system/app/Superuser.apk skip=7026336 seek=0 bs=1 count=196640\r\n\r\n\r\nUse tar.xz In the end of the new_zImage:\r\n\t./repack.sh zImagesy262 initramfs.cpio new_zImage payload\r\n\r\n\thow to use,pls read initramfs-sample/sbin/script/post-init.sh & recovery.sh\r\n\trecovery.tar.xz and boot.tar.xz in resources directory，you can customize.\r\n\tIn recovery.sh:\r\n\tcd /\r\n\teval $(read_boot_headers /dev/block/mmcblk0p5)\r\n\tload_offset=$recovery_offset\r\n\tload_len=$recovery_len\r\n\tdd bs=512 if=/dev/block/mmcblk0p5 skip=$load_offset count=$load_len | xzcat | tar x\r\n\r\n\r\nCustom zImage compression type:\r\n\t./repack.sh zImagesy267 initramfs.cpio new_zImage gzip\r\n\tor\r\n\t./repack.sh zImagesy267 initramfs.cpio new_zImage payload gzip\r\n\r\n中文版：\r\n修改repack.sh开头的编译器路径和库文件路径，改为你自己的：\r\n\tCOMPILER=/home/xiaolu/bin/android-toolchain-eabi/bin/arm-eabi\r\n\tCOMPILER_LIB=/home/xiaolu/bin/android-toolchain-eabi/lib/gcc/arm-eabi/4.5.4\r\n\t\r\n解包zImage，例如：\r\n\t./unpack.sh zImagesy267 sy267\r\n\t\r\n重新打包编译zImage：\r\n\t格式：\r\n\t./repack.sh 原始zImage initramfs(目录或者cpio文件) 新zImage名\r\n\t例如：\r\n\t./repack.sh zImagesy267 initramfs.cpio new_zImage\r\n\tor\r\n\t./repack.sh zImagesy267 sy267 new_zImage\r\n\t\r\n\t对于超出大小的initramfs，可以使用下边两种办法来打包：\r\n\t1.把2进制的su文件和Superuser.apk文件放在新zImage的7000000字节偏移处，命令：\r\n\t./repack.sh zImagesm189 sm189.cpio new_zImage su\r\n\t如何在启动的时候调用su和Superuser.apk，请在root脚本里添加如下:\r\n\tdd if=/dev/block/mmcblk0p5 of=/system/bin/su skip=7000000 seek=0 bs=1 count=26336\r\n\tdd if=/dev/block/mmcblk0p5 of=/system/app/Superuser.apk skip=7026336 seek=0 bs=1 count=196640\r\n\t\r\n\t2.使用把一些大文件打包成tar.xz放在zImage末尾，启动需要用到的时候读取压缩包偏移量，用DD复制出来解压到rootfs相应位置。\r\n\t./repack.sh zImagesy262 initramfs.cpio new_zImage payload\r\n\t上边的命令是打包的同时把recovery.tar.xz和boot.tar.xz放在zImage末尾，下边说一下如何使用，以启动recovery(recovery.sh)为例子：\r\n\tcd /\r\n\teval $(read_boot_headers /dev/block/mmcblk0p5)\r\n\tload_offset=$recovery_offset\r\n\tload_len=$recovery_len\r\n\tdd bs=512 if=/dev/block/mmcblk0p5 skip=$load_offset count=$load_len | xzcat | tar x\r\n\t\r\n\t自定义zImage压缩类型：\r\n\t./repack.sh zImagesy267 initramfs.cpio new_zImage gzip\r\n\t或者\r\n\t./repack.sh zImagesy267 initramfs.cpio new_zImage payload gzip\r\n\t\r\n","name":"Galaxys2 kernel repack"}